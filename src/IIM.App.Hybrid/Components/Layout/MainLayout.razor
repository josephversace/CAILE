@* MainLayout.razor - Based on the actual prototype.html *@
@inherits LayoutComponentBase
@using IIM.Core.Services
@inject NavigationManager Navigation

<div class="app-wrapper">
    <!-- Header -->
    <div class="app-header">
        <div class="header-left">
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <div class="logo-text">
                    <h1>IIM Platform</h1>
                    <span>Intelligent Investigation Machine</span>
                </div>
            </div>
        </div>

        <div class="header-center">
            <div class="global-search">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search across all cases, evidence, and models..." @bind="searchQuery" @onkeyup="@(async (e) => { if (e.Key == "Enter") await PerformSearch(); })">
            </div>
        </div>

        <div class="header-right">
            <button class="header-button">
                <i class="fas fa-plus"></i>
            </button>
            <button class="header-button">
                <i class="fas fa-bell"></i>
                <span class="notification-badge">3</span>
            </button>
            <button class="header-button">
                <i class="fas fa-th"></i>
            </button>
            <button class="header-button">
                <i class="fas fa-user"></i>
            </button>
        </div>
    </div>

    <!-- Main Body -->
    <div class="app-body">
        @Body
    </div>
</div>

<style>
    :root {
        --primary: #6366f1;
        --primary-dark: #4f46e5;
        --secondary: #8b5cf6;
        --tertiary: #14b8a6;
        --success: #10b981;
        --danger: #ef4444;
        --warning: #f59e0b;
        --info: #06b6d4;
        --dark: #0f172a;
        --darker: #020617;
        --light: #f8fafc;
        --lighter: #ffffff;
        --border: #e2e8f0;
        --text-primary: #1e293b;
        --text-secondary: #64748b;
        --text-muted: #94a3b8;
        --sidebar-width: 280px;
        --header-height: 65px;
        --gradient-primary: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        --gradient-dark: linear-gradient(135deg, #1e3a8a 0%, #312e81 100%);
        --gradient-success: linear-gradient(135deg, #059669 0%, #10b981 100%);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Inter', 'Segoe UI', Roboto, sans-serif;
        background: var(--darker);
        color: var(--text-primary);
        height: 100vh;
        overflow: hidden;
    }

    .app-wrapper {
        height: 100vh;
        display: flex;
        flex-direction: column;
        background: var(--lighter);
    }

    /* Enhanced Header */
    .app-header {
        height: var(--header-height);
        background: var(--gradient-primary);
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 24px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        z-index: 1000;
    }

    .header-left {
        display: flex;
        align-items: center;
        gap: 24px;
    }

    .logo {
        display: flex;
        align-items: center;
        gap: 12px;
        color: white;
    }

    .logo-icon {
        width: 40px;
        height: 40px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
    }

    .logo-text h1 {
        font-size: 18px;
        font-weight: 700;
        margin: 0;
        line-height: 1.2;
    }

    .logo-text span {
        font-size: 11px;
        opacity: 0.9;
        font-weight: 500;
    }

    /* Global Search */
    .header-center {
        flex: 1;
        max-width: 600px;
        margin: 0 32px;
    }

    .global-search {
        display: flex;
        align-items: center;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        padding: 10px 16px;
        transition: all 0.3s;
    }

        .global-search:hover,
        .global-search:focus-within {
            background: rgba(255, 255, 255, 0.25);
            border-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .global-search i {
            color: rgba(255, 255, 255, 0.7);
            margin-right: 12px;
        }

        .global-search input {
            flex: 1;
            background: transparent;
            border: none;
            color: white;
            font-size: 14px;
            outline: none;
        }

            .global-search input::placeholder {
                color: rgba(255, 255, 255, 0.6);
            }

    /* Header Actions */
    .header-right {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .header-button {
        width: 38px;
        height: 38px;
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
        position: relative;
    }

        .header-button:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
        }

    .notification-badge {
        position: absolute;
        top: -4px;
        right: -4px;
        width: 18px;
        height: 18px;
        background: var(--danger);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
        font-weight: 600;
        border: 2px solid var(--primary);
    }

    /* Main Layout */
    .app-body {
        flex: 1;
        display: flex;
        overflow: hidden;
    }
</style>

@code {
    private string searchQuery = "";

    private async Task PerformSearch()
    {
        if (!string.IsNullOrWhiteSpace(searchQuery))
        {
            Navigation.NavigateTo($"/search?q={Uri.EscapeDataString(searchQuery)}");
        }
    }
}