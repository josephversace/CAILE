@using Microsoft.AspNetCore.Components.Web

@inherits IIM.Components.Shared.Tabs

<CascadingValue Value="this">
    @ChildContent
    <ul class="nav nav-tabs" role="tablist">
        @foreach (var tab in _tabs)
        {
            var isActive = tab.Id == ActiveTabId;
            <li class="nav-item" role="presentation">
                <button class="nav-link @(isActive ? "active" : (tab.Disabled ? "disabled" : null))"
                        id="@($"{tab.Id}-tab")"
                        type="button"
                        role="tab"
                        aria-controls="@tab.Id"
                        aria-selected="@(isActive ? "true" : "false")"
                        disabled="@tab.Disabled"
                        @onclick="() => Activate(tab.Id)"
                        @onkeydown="(KeyboardEventArgs e) => OnKeyDown(e, tab.Id)">
                    @if (!string.IsNullOrWhiteSpace(tab.Icon))
                    {
                        <i class="@tab.Icon" aria-hidden="true"></i>
                        <span class="ms-1">@tab.Title</span>
                    }
                    else
                    {
                        @tab.Title
                    }
                </button>
            </li>
        }
    </ul>

    <div class="tab-content p-3 border border-top-0 rounded-bottom">
        @if (_tabs.Count == 0)
        {
            <div class="text-muted">No tabs.</div>
        }
        else
        {
            @foreach (var tab in _tabs)
            {
                bool isActive = tab.Id == ActiveTabId;
                <div class="tab-pane fade @(isActive ? "show active" : "")" id="@tab.Id" role="tabpanel" aria-labelledby="@($"{tab.Id}-tab")">
                    @if (!Lazy || (Lazy && (isActive || _everActivated.Contains(tab.Id))))
                    {
                        @tab.ChildContent
                    }
                </div>
            }
        }
    </div>
</CascadingValue>

