
@namespace IIM.Components.Components.Layout
@using IIM.Core.Models
@using IIM.Core.Services
@using IIM.Shared.Enums
@inherits LayoutComponentBase


<div class="iim-app-wrapper" data-bs-theme="@(_isDarkMode ? "dark" : "light")">
    <!-- Header -->

    <button class="iim-header-menu-toggle" @onclick="@HandleSettingsClicked" title="Settings">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Main Body -->
    <div class="app-body d-flex">
       
        <!-- Content Area -->
        <div class="app-content flex-fill d-flex flex-column">
            <!-- Tool Ribbon -->
            <ToolRibbon OnToolSelected="@HandleToolSelected" />

      
               

            <div class="card h-100" style="z-index: 1020;">
                <div class="d-flex h-100">
                    <a class="d-lg-none btn btn-lg bg-inverse bg-opacity-15 bg-blur-2 text-body rounded-0 z-3 ms-1px mt-5 shadow-lg position-absolute top-0 start-0 " data-bs-toggle="offcanvas" href="#aiChatSidebar" role="button" aria-controls="offcanvasExample"><i class="fa fa-gear"></i></a>

                    <div class="w-300px offcanvas offcanvas-start bg-none position-lg-relative transform-lg-none visibility-lg-initial z-lg-3" id="aiChatSidebar">
                        <div class="d-lg-none bg-blur-3 d-block position-absolute top-0 end-0 w-100 h-100"></div>


                        <div class="position-relative h-100 d-flex flex-column">
                            <div class="p-3">
                                <button type="button" class="btn btn-outline-theme w-100 rounded-3 py-2 d-flex align-items-center justify-content-center" data-toggle-ai-tab="aiChatIntro">
                                    New Chat
                                </button>
                            </div>


                            <hr class="m-0 opacity-20">


                            <div class="flex-1 overflow-hidden text-body">
                                <div data-scrollbar="true" class="p-3" data-height="100%">
                                    <div class="fw-500 mb-1 d-flex align-items-center">
                                        <iconify-icon icon="solar:calendar-bold-duotone" class="fs-16px me-8px mt-n1 text-theme"></iconify-icon>
                                        Today
                                    </div>
                                    <div class="px-2">
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Plan My Dream Vacation</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Craft a Winning Pitch</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Organize My Day</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Write Custom Code</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Draft a Polished Email</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Brainstorm Ideas</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="fw-500 mb-1 d-flex align-items-center mt-3">
                                        <iconify-icon icon="solar:calendar-bold-duotone" class="fs-16px me-8px mt-n1 text-theme"></iconify-icon>
                                        1 Week Ago
                                    </div>
                                    <div class="px-2">
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Summarize an Article</div><a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Prepare for a Speech</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Create a Business Proposal</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="fw-500 mb-1 d-flex align-items-center mt-3">
                                        <iconify-icon icon="solar:calendar-bold-duotone" class="fs-16px me-8px mt-n1 text-theme"></iconify-icon>
                                        2 Weeks Ago
                                    </div>
                                    <div class="px-2">
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Organize Project Tasks</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Research Market Trends</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                            <div class="flex-1 text-body text-opacity-75">Craft Social Media Posts</div>
                                            <a href="#" class="stretched-link" data-toggle-ai-tab="aiChatPrev"></a>
                                            <div class="dropdown position-relative z-3">
                                                <a href="#" data-bs-toggle="dropdown" class="link-secondary opacity-50 d-none hover-show-elm"><i class="fa fa-ellipsis"></i></a>
                                                <div class="dropdown-menu">
                                                    <a href="#" class="dropdown-item">Share Chat</a>
                                                    <a href="#" class="dropdown-item">See Details</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a href="#" class="dropdown-item">Rename</a>
                                                    <a href="#" class="dropdown-item">Archive</a>
                                                    <a href="#" class="dropdown-item">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <hr class="m-0 opacity-20">


                            <div class="fs-6 p-2">
                                <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                    <i class="far fa-folder fa-lg fa-fw me-2 ms-n2"></i>
                                    Explore Bots
                                </div>
                                <div class="position-relative hover-bg-light bg-opacity-25 hover-show rounded-2 py-6px px-3 border-0 d-flex align-items-center">
                                    <i class="far fa-gem fa-lg fa-fw me-2 ms-n2"></i>
                                    Go Pro
                                </div>
                            </div>


                            <hr class="m-0 opacity-20">


                            <div class="rounded-4 px-3 py-3 border-0">
                                <div class="fw-500 flex-1 fs-13px text-body d-flex align-items-center">
                                    <div class="w-30px h-30px fs-20px me-2 rounded-circle text-white bg-inverse bg-opacity-50 d-flex align-items-center justify-content-center">
                                        S
                                    </div>
                                    support@seantheme.com
                                </div>
                            </div>
                        </div>
                    </div>


                   @Body
                </div>


                <div class="card-arrow">
                    <div class="card-arrow-top-left"></div>
                    <div class="card-arrow-top-right"></div>
                    <div class="card-arrow-bottom-left"></div>
                    <div class="card-arrow-bottom-right"></div>
                </div>
            </div>


@*             <!-- Main Content -->
            <main class="app-main flex-fill">
                <ErrorBoundary>
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent Context="exception">
                        <div class="alert alert-danger m-4" role="alert">
                            <h4 class="alert-heading">
                                <i class="fas fa-exclamation-triangle me-2"></i>An error occurred
                            </h4>
                            <p>@exception.Message</p>
                            <hr>
                            <p class="mb-0">
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => RecoverFromError()">
                                    <i class="fas fa-redo me-1"></i>Reload
                                </button>
                            </p>
                        </div>
                    </ErrorContent>
                </ErrorBoundary>
            </main> *@

            <!-- Status Bar -->
        @*     <StatusBar ConnectionStatus="_connectionStatus"
                       ModelStatus="_modelStatus"
                       GpuUsage="_gpuUsage"
                       RamUsage="_ramUsage" /> *@
        </div>
    </div>
</div>

<!-- Notification Container -->
<div class="iim-notifications" id="notificationContainer">
    @foreach (var notification in _notifications)
    {
        <div class="iim-notification @GetNotificationTypeClass(notification.Type) @GetPriorityClass(notification.Priority) show">
            <i class="fas @GetNotificationIcon(notification) me-2"></i>
            <div class="notification-content">
                @if (!string.IsNullOrEmpty(notification.Title))
                {
                    <strong>@notification.Title</strong>
                    <br />
                }
                @notification.Message
            </div>
        </div>
    }
</div>





@code {
    private bool _isDarkMode = true;
    private bool _sidebarCollapsed = false;
    private string _currentTool = "investigation";
    private string _connectionStatus = "connected";
    private string _modelStatus = "ready";
    private int _gpuUsage = 45;
    private int _ramUsage = 62;

    // Using existing models from IIM.Core and Models namespace
    private List<Notification> _notifications = new();
    private InvestigationSession? _currentSession;
    private List<InvestigationSession> _sessions = new();
    private GpuStats? _gpuStats;

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    [Inject] private ILogger<MainLayout> Logger { get; set; } = default!;

    // Optional service injections - check if available
    [Inject] private IInvestigationService? InvestigationService { get; set; }
    [Inject] private IModelManagementService? ModelService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Load user preferences
        _isDarkMode = await LoadPreference("darkMode", true);
        _sidebarCollapsed = await LoadPreference("sidebarCollapsed", false);

        // Load sessions if service available
        if (InvestigationService != null)
        {
            try
            {
                //Todo: implement

               // _sessions = await InvestigationService.GetSessionsAsync();
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Failed to load investigation sessions");
            }
        }

        // Initialize monitoring
        await StartSystemMonitoring();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize HUD components after first render
            await JSRuntime.InvokeVoidAsync("eval", @"
                if (window.App && window.App.init) {
                    window.App.init();
                }
                if (window.IIM && window.IIM.init) {
                    window.IIM.init();
                }
            ");
        }
    }

    private void ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        SavePreference("darkMode", _isDarkMode);
        StateHasChanged();
    }

    private void ToggleSidebar()
    {
        _sidebarCollapsed = !_sidebarCollapsed;
        SavePreference("sidebarCollapsed", _sidebarCollapsed);
    }

    private async Task HandleSessionSelected(string sessionId)
    {
        if (InvestigationService != null)
        {
            try
            {
                _currentSession = await InvestigationService.GetSessionAsync(sessionId);
                ShowNotification($"Session loaded: {_currentSession.Title}", NotificationType.Success, "Session Loaded", NotificationCategory.Investigation);
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Failed to load session {SessionId}", sessionId);
                ShowNotification("Failed to load session", NotificationType.Error, "Error", NotificationCategory.System);
            }
        }

        // Navigate to investigation page with session
        NavigationManager.NavigateTo($"/investigation/{sessionId}");
    }

    private async Task HandleNewSession()
    {
        if (InvestigationService != null)
        {
            try
            {
                var request = new CreateSessionRequest
                {
                    Title = "New Investigation",
                    CaseId = "",
                    InvestigationType = InvestigationType.GeneralInquiry.ToString()
                };

                var session = await InvestigationService.CreateSessionAsync(request);
                _currentSession = session;
                ShowNotification("New investigation session created", NotificationType.Success, "Session Created", NotificationCategory.Investigation);
                NavigationManager.NavigateTo($"/investigation/{session.Id}");
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "Failed to create new session");
                ShowNotification("Failed to create session", NotificationType.Error, "Error", NotificationCategory.System);
            }
        }
        else
        {
            // Fallback if service not available
            var sessionId = Guid.NewGuid().ToString();
            ShowNotification("New investigation session created", NotificationType.Info, "Session Created", NotificationCategory.Investigation);
            NavigationManager.NavigateTo($"/investigation/{sessionId}");
        }
    }

    private void HandleSettingsClicked()
    {
        // Open settings panel
        Logger.LogInformation("Settings clicked");
        NavigationManager.NavigateTo($"/settings");
    }

    private void HandleToolSelected(string tool)
    {
        _currentTool = tool;
        Logger.LogInformation("Tool selected: {Tool}", tool);
        StateHasChanged();
    }

    private void RecoverFromError()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private async Task StartSystemMonitoring()
    {
        // Monitor GPU and system resources
        var timer = new PeriodicTimer(TimeSpan.FromSeconds(5));

        _ = Task.Run(async () =>
        {
            while (await timer.WaitForNextTickAsync())
            {
                try
                {
                    if (ModelService != null)
                    {
                        _gpuStats = await ModelService.GetGpuStatsAsync();
                        if (_gpuStats != null)
                        {
                            _gpuUsage = (int)_gpuStats.UtilizationPercent;
                            _ramUsage = (int)((double)_gpuStats.UsedMemory / _gpuStats.TotalMemory * 100);
                        }
                    }
                    else
                    {
                        // Simulate if service not available
                        _gpuUsage = Random.Shared.Next(40, 60);
                        _ramUsage = Random.Shared.Next(55, 70);
                    }

                    await InvokeAsync(StateHasChanged);
                }
                catch (Exception ex)
                {
                    Logger.LogError(ex, "Error monitoring system resources");
                }
            }
        });
    }

    private void ShowNotification(string message, NotificationType type, string? title = null, NotificationCategory category = NotificationCategory.System)
    {
        var notification = new Notification
        {
            Id = Guid.NewGuid().ToString(),
            Title = title ?? "",
            Message = message,
            Type = type,
            Category = category,
            Priority = type == NotificationType.Error ? NotificationPriority.High : NotificationPriority.Normal,
            CreatedAt = DateTimeOffset.UtcNow,
            IsRead = false
        };

        _notifications.Add(notification);
        StateHasChanged();

        // Remove after 3 seconds for non-critical notifications
        if (notification.Priority != NotificationPriority.Critical)
        {
            Task.Delay(3000).ContinueWith(_ =>
            {
                _notifications.Remove(notification);
                InvokeAsync(StateHasChanged);
            });
        }
    }

    private string GetNotificationTypeClass(NotificationType type) => type switch
    {
        NotificationType.Success => "success",
        NotificationType.Error => "error",
        NotificationType.Warning => "warning",
        NotificationType.Critical => "critical",
        _ => "info"
    };

    private string GetPriorityClass(NotificationPriority priority) => priority switch
    {
        NotificationPriority.Urgent or NotificationPriority.Critical => "priority-high",
        NotificationPriority.Low => "priority-low",
        _ => ""
    };

    private string GetNotificationIcon(Notification notification)
    {
        // First check category-specific icons
        if (notification.Category == NotificationCategory.Model)
            return "fa-robot";
        if (notification.Category == NotificationCategory.Investigation)
            return "fa-search";
        if (notification.Category == NotificationCategory.Evidence)
            return "fa-file-alt";
        if (notification.Category == NotificationCategory.Security)
            return "fa-shield-alt";

        // Fall back to type-based icons
        return notification.Type switch
        {
            NotificationType.Success => "fa-check-circle",
            NotificationType.Error => "fa-exclamation-circle",
            NotificationType.Warning => "fa-exclamation-triangle",
            NotificationType.Critical => "fa-times-circle",
            _ => "fa-info-circle"
        };
    }

    private async Task<T> LoadPreference<T>(string key, T defaultValue)
    {
        try
        {
            var result = await JSRuntime.InvokeAsync<string>($"localStorage.getItem", $"iim_{key}");
            if (result != null)
            {
                return System.Text.Json.JsonSerializer.Deserialize<T>(result) ?? defaultValue;
            }
        }
        catch (Exception ex)
        {
            Logger.LogWarning(ex, "Failed to load preference {Key}", key);
        }
        return defaultValue;
    }

    private async void SavePreference<T>(string key, T value)
    {
        try
        {
            var json = System.Text.Json.JsonSerializer.Serialize(value);
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", $"iim_{key}", json);
        }
        catch (Exception ex)
        {
            Logger.LogWarning(ex, "Failed to save preference {Key}", key);
        }
    }



    public void Dispose()
    {
        // Cleanup if needed
    }
}