// ============================================
// File: src/IIM.App.Hybrid/Components/Layout/AppHeader.razor
// ============================================
@using IIM.Core.Models
@using IIM.Components.Services
@using IIM.Core.Services
@inject NavigationManager Navigation
@inject ICaseManager CaseManager
@inject INotificationService NotificationService

<div class="app-header">
    <div class="header-left">
        <div class="logo">
            <div class="logo-icon">
                <i class="fas fa-shield-alt"></i>
            </div>
            <div class="logo-text">IIM Platform</div>
        </div>

        @if (CurrentCase != null)
        {
            <div class="case-switcher" @onclick="ShowCaseSelector">
                <i class="fas fa-folder"></i>
                <span>@CurrentCase.Name</span>
                <span class="case-badge @GetCaseStatusClass(CurrentCase.Status)">@CurrentCase.Status</span>
                <i class="fas fa-chevron-down"></i>
            </div>
        }
    </div>

    <div class="header-center">
        <div class="global-search">
            <i class="fas fa-search"></i>
            <input type="text" placeholder="Search across all cases, evidence, and models..." @bind="SearchQuery"
                @onkeyup="@(async (e) => { if (e.Key == "Enter") await PerformSearch(); })">
        </div>
    </div>

    <div class="header-right">
        <button class="header-button" @onclick="CreateNewInvestigation" title="New Investigation">
            <i class="fas fa-plus"></i>
        </button>

        <button class="header-button" @onclick="ShowNotifications" title="Notifications">
            <i class="fas fa-bell"></i>
            @if (UnreadNotificationCount > 0)
            {
                <span class="notification-badge">@UnreadNotificationCount</span>
            }
        </button>

        <button class="header-button" @onclick="ShowAppGrid" title="Apps">
            <i class="fas fa-th"></i>
        </button>

        <button class="header-button" @onclick="ShowUserMenu" title="User Menu">
            <i class="fas fa-user"></i>
        </button>
    </div>
</div>

@code {
    [Parameter] public Case? CurrentCase { get; set; }
    [Parameter] public EventCallback<Case> OnCaseChanged { get; set; }

    private string SearchQuery = "";
    private int UnreadNotificationCount = 0;

    protected override async Task OnInitializedAsync()
    {
        UnreadNotificationCount = await NotificationService.GetUnreadCountAsync();
    }

    private async Task ShowCaseSelector()
    {
        // TODO: Show case selector modal
    }

    private async Task PerformSearch()
    {
        if (!string.IsNullOrWhiteSpace(SearchQuery))
        {
            Navigation.NavigateTo($"/search?q={Uri.EscapeDataString(SearchQuery)}");
        }
    }

    private void CreateNewInvestigation()
    {
        Navigation.NavigateTo("/investigation/new");
    }

    private async Task ShowNotifications()
    {
        // TODO: Show notifications dropdown
    }

    private void ShowAppGrid()
    {
        // TODO: Show app grid dropdown
    }

    private void ShowUserMenu()
    {
        // TODO: Show user menu dropdown
    }

    private string GetCaseStatusClass(CaseStatus status) => status switch
    {
        CaseStatus.Active => "active",
        CaseStatus.Pending => "pending",
        CaseStatus.UnderReview => "review",
        CaseStatus.Closed => "closed",
        CaseStatus.Cold => "cold",
        CaseStatus.Archived => "archived",
        _ => ""
    };
}
